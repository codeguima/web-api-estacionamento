// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estacionamento.Migrations
{
    [DbContext(typeof(EstacionamentoDbContext))]
    [Migration("20231104044311_cricao1")]
    partial class cricao1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Cliente", b =>
                {
                    b.Property<string>("_Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("_Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("_Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("_Cpf");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Marca", b =>
                {
                    b.Property<string>("_nomeMarca")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_segmento")
                        .HasColumnType("INTEGER");

                    b.HasKey("_nomeMarca");

                    b.ToTable("marca");
                });

            modelBuilder.Entity("Modelo", b =>
                {
                    b.Property<string>("_nomeModelo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_TipoModelo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_motor")
                        .HasColumnType("TEXT");

                    b.Property<string>("_nomeMarca")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_qtdPortas")
                        .HasColumnType("INTEGER");

                    b.HasKey("_nomeModelo");

                    b.ToTable("modelo");
                });

            modelBuilder.Entity("NotaFiscal", b =>
                {
                    b.Property<string>("_NumeroNota")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_Cpf")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("_OrdemServico")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("_ValorDaNota")
                        .HasColumnType("REAL");

                    b.HasKey("_NumeroNota");

                    b.ToTable("notafiscal");
                });

            modelBuilder.Entity("Periodo", b =>
                {
                    b.Property<string>("_Placa")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("_HoraEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("_HoraSaida")
                        .HasColumnType("TEXT");

                    b.HasKey("_Placa");

                    b.ToTable("periodo");
                });

            modelBuilder.Entity("Servico", b =>
                {
                    b.Property<int?>("_OrdemServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("_Placa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_tipoServico")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("_valorPagar")
                        .HasColumnType("REAL");

                    b.Property<double?>("_valorServico")
                        .HasColumnType("REAL");

                    b.HasKey("_OrdemServico");

                    b.ToTable("servico");
                });

            modelBuilder.Entity("Ticket", b =>
                {
                    b.Property<int?>("_codTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("_Placa")
                        .HasColumnType("TEXT");

                    b.HasKey("_codTicket");

                    b.ToTable("ticket");
                });

            modelBuilder.Entity("Veiculo", b =>
                {
                    b.Property<string>("_Placa")
                        .HasColumnType("TEXT");

                    b.Property<int>("_CorExterna")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("_nomeModelo")
                        .HasColumnType("TEXT");

                    b.HasKey("_Placa");

                    b.ToTable("veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
